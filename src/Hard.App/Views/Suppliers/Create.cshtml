@model Hard.App.ViewModels.SupplierViewModel

@{
    ViewData["Title"] = "New supplier";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DocumentId" class="control-label"></label>
                <input asp-for="DocumentId" class="form-control" />
                <span asp-validation-for="DocumentId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DocumentType" class="control-label"></label>
                <input type="radio" value="0" asp-for="DocumentType" checked/>  CPF
                <input type="radio" value="1" asp-for="DocumentType"/>  CNPJ
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <h4>Address</h4>
            <hr>
            <partial name="_Address"/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-secondary" href="javascript:window.history.back();">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>SearchZipCode();</script>
}
